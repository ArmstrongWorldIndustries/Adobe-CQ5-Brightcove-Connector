<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- ====================================================================== -->
    <!-- P A R E N T P R O J E C T D E S C R I P T I O N -->
    <!-- ====================================================================== -->

    <parent>
        <groupId>com.coresecure.brightcove.cq5</groupId>
        <artifactId>parent</artifactId>
        <version>4.2.0-SNAPSHOT</version>
    </parent>

    <!-- ====================================================================== -->
    <!-- P R O J E C T D E S C R I P T I O N -->
    <!-- ====================================================================== -->


    <artifactId>brightcove-services</artifactId>
    <packaging>bundle</packaging>

    <name>${project.groupId} - ${project.artifactId}</name>

    <description>
        An OSGi Bundle containing all of the backend CQ service implementations for the 'Adobe CQ5 Brightcove Connector
        API' project.

        During development, this bundle can be automatically deployed to your CQ instance by activating the
        "auto-deploy" profile and running the Maven "install" lifecycle phase (e.g. "mvn -Pauto-deploy install"). This
        can also be done from within most IDEs like Eclipse.
    </description>


    <!-- ====================================================================== -->
    <!-- D E P E N D E N C I E S                                                -->
    <!-- ====================================================================== -->

    <dependencies>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.scr.annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore-osgi</artifactId>
            <version>4.1.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-osgi</artifactId>
            <version>4.1.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.1.4</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.adobe.aem</groupId>
            <artifactId>uber-jar</artifactId>
            <classifier>apis</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.settings</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.sling</groupId>
            <artifactId>org.apache.sling.jcr.jcr-wrapper</artifactId>
            <version>2.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-api</artifactId>
            <version>2.5.3</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

    </dependencies>

    <!-- ====================================================================== -->
    <!-- B U I L D   D E F I N I T I O N                                        -->
    <!-- ====================================================================== -->

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-Activator>com.brightcove.proserve.mediaapi.wrapper.osgi.Activator</Bundle-Activator>
                        <Embed-Dependency>
                            httpclient;scope=compile,
                            httpcore;scope=compile,
                            httpmime;scope=compile,
                            jsoup;scope=compile
                        </Embed-Dependency>
                        <!--<Embed-Dependency>-->
                            <!--httpclient;scope=compile|runtime,-->
                            <!--&lt;!&ndash;jackson-core;scope=compile|runtime,&ndash;&gt;-->
                            <!--&lt;!&ndash;java-jwt;scope=compile|runtime,&ndash;&gt;-->
                        <!--</Embed-Dependency>-->
                        <!--<Import-Package>-->
                            <!--net.sf.ehcache;resolution:=optional,-->
                            <!--net.spy.memcached;resolution:=optional,-->
                            <!--sun.misc;resolution:=optional,-->
                            <!--com.sun.jdmk.comm;resolution:=optional,*-->
                        <!--</Import-Package>-->
                        <Embed-Transitive>true</Embed-Transitive>
                    </instructions>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-scr-plugin</artifactId>
            </plugin>

            <!--
            Listens for changes and then run auto-deploy when a file has been changed.
               [ https://github.com/fizzed/maven-plugins ]
               Ex:
                   mvn fizzed-watcher:run -Dcq.host=192.168.99.100 -Dcq.port=4502
            -->
            <plugin>
                <groupId>com.fizzed</groupId>
                <artifactId>fizzed-watcher-maven-plugin</artifactId>
                <version>1.0.6</version>
                <configuration>
                    <watches>
                        <watch>
                            <directory>src/main</directory>
                        </watch>
                    </watches>
                    <goals>
                        <param>clean</param>
                        <param>install</param>
                    </goals>
                    <profiles>
                        <param>auto-deploy-bundle</param>
                    </profiles>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <!-- ====================================================================== -->
    <!-- P R O F I L E S                                                        -->
    <!-- ====================================================================== -->

    <profiles>
        <profile>
            <!--  Replace "auto-deploy" with sub-module specific profiles to allow them to be installed individually. -->
            <id>auto-deploy-services</id>
            <build>
                <plugins>
                    <!--
                        Use the sling plugin to automatically deploy the bundle to the JCR tree
                    -->
                    <plugin>
                        <groupId>org.apache.sling</groupId>
                        <artifactId>maven-sling-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-bundle</id>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                                <configuration>
                                    <slingUrl>http://${cq.host}:${cq.port}</slingUrl>
                                    <!--
                                        IMPORTANT: due to an issue with the 2.1.0 version of the maven-sling-plugin, the path specified by the slingUrlSuffix
                                        parameter below will not be created automatically and so must already exist in your CQ instance BEFORE trying to use the
                                        auto-deploy profile. See this link for further information:
                                        http://mail-archives.apache.org/mod_mbox/sling-users/201204.mbox/%3CBD6ED82C-3223-41C2-BF15-C987D7AAFCE3@craigsdickson.com%3E
                                    -->
                                    <slingUrlSuffix>/apps/brightcove/install</slingUrlSuffix>
                                    <user>${cq.user}</user>
                                    <password>${cq.password}</password>
                                    <usePut>true</usePut>
                                    <failOnError>true</failOnError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
